Actor FighterClass : FighterPlayer
{
	-NOSKIN
	Player.StartItem "FWeapFist2"
	Player.StartItem "IsNotMonsterClass", 1
	Player.WeaponSlot 1, FWeapFist2
	Player.WeaponSlot 2, FWeapAxe2
	Player.WeaponSlot 3, FWeapHammer2
	Player.WeaponSlot 4, FWeapQuietus2
	States
	{
		Death:
			PLAY H 6
			PLAY I 6 A_PlayerScream
			PLAY JK 6
			PLAY L 6 A_NoBlocking
			PLAY M 6
			PLAY N 6 A_SpawnItemEx("ReviveFighter")
			TNT1 A -1
			Stop
		XDeath:
			PLAY O 5 A_PlayerScream
			PLAY P 5 A_SkullPop("BloodyFighterSkull")
			PLAY R 5 A_NoBlocking
			PLAY STUV 5
			PLAY W 5 A_SpawnItemEx("XReviveFighter")
			TNT1 A -1
			Stop
			
		Death.MonsterFire:
		XDeath.MonsterFire:
			PLAY A 0 A_GiveToTarget("Health", 20)
			PLAY A 0 A_GiveToTarget("DiscipleSummons", 1)
			Goto Burn
		Death.MonsterIce:
		XDeath.MonsterIce:
			PLAY A 0 A_GiveToTarget("Health", 20)
			PLAY A 0 A_GiveToTarget("DiscipleSummons", 1)
			Goto Ice
		Death.Monster:
			PLAY A 0 A_GiveToTarget("Health", 20)
			PLAY A 0 A_GiveToTarget("DiscipleSummons", 1)
			Goto Death
		XDeath.Monster:
			PLAY A 0 A_GiveToTarget("Health", 20)
			PLAY A 0 A_GiveToTarget("DiscipleSummons", 1)
			Goto XDeath
	}
}

Actor FWeapFist2 : FWeapFist replaces FWeapFist
{
	Weapon.PreferredSkin "FighterFists"
	Inventory.RestrictedTo "FighterClass"
	States
		{
			Select:
				FPCH A 1 A_Raise
				Loop
			Deselect:
				FPCH A 1 A_Lower
				Loop
			Ready:
				FPCH A 1 A_WeaponReady
				Loop
			Fire:
				FPCH B 5 Offset(5, 40)
				FPCH C 4 Offset(5, 40)
				FPCH D 4 Offset(5, 40) A_FPunchAttack
				FPCH C 4 Offset(5, 40)
				FPCH B 5 Offset(5, 40) A_ReFire
				Goto Ready
			Fire2:
				FPCH DE 4 Offset(5, 40)
				FPCH E 1 Offset(15, 50)
				FPCH E 1 Offset(25, 60)
				FPCH E 1 Offset(35, 70)
				FPCH E 1 Offset(45, 80)
				FPCH E 1 Offset(55, 90)
				FPCH E 1 Offset(65, 90)
				FPCH E 10 Offset(0, 150)
				Goto Ready
			AltFire:
				FPCH F 3 Offset(0, 40)
				FPCH G 2 Offset(0, 40)
				FPCH H 2 Offset(0, 40) A_CustomPunch(10, 0, 0, "PunchPuff", 128)
				FPCH G 2 Offset(0, 40)
				FPCH F 3 Offset(0, 40)
				FPCH B 3 Offset(5, 40)
				FPCH C 2 Offset(5, 40)
				FPCH D 2 Offset(5, 40) A_CustomPunch(10, 0, 0, "PunchPuff", 128)
				FPCH C 2 Offset(5, 40)
				FPCH B 3 Offset(5, 40)
				Goto Ready
		}
}

Actor FWeapAxe2 : FWeapAxe replaces FWeapAxe
{
	Inventory.RestrictedTo "FighterClass"
	States
		{
			Spawn:
				WFAX A -1
				Stop
			Select:
				FAXE A 1 A_FAxeCheckUp
				Loop
			Deselect:
				FAXE A 1 A_Lower
				Loop
			Ready:
				FAXE A 1 A_FAxeCheckReady
				Loop
			Fire:
				FAXE B 4 Offset(15, 32) A_FAxeCheckAtk
				FAXE C 3 Offset(15, 32)
				FAXE D 2 Offset(15, 32)
				FAXE D 1 Offset(-5, 70) A_FAxeAttack
				FAXE D 2 Offset(-25, 90)
				FAXE E 1 Offset(15, 32)
				FAXE E 2 Offset(10, 54)
				FAXE E 7 Offset(10, 150)
				FAXE A 1 Offset(-1, 60) A_ReFire
				FAXE A 1 Offset(0, 52)
				FAXE A 1 Offset(0, 44)
				FAXE A 1 Offset(0, 36)
				FAXE A 1
				Goto Ready
			SelectGlow:
				FAXE L 1 A_FAxeCheckUpG
				Loop
			DeselectGlow:
				FAXE L 1 A_Lower
				Loop
			ReadyGlow:
				FAXE LLLMMM 1 A_FAxeCheckReadyG
				Loop
			FireGlow:
				FAXE N 4 Offset(15, 32)
				FAXE O 3 Offset(15, 32)
				FAXE P 2 Offset(15, 32)
				FAXE P 1 Offset(-5, 70) A_FAxeAttack
				FAXE P 2 Offset(-25, 90)
				FAXE Q 1 Offset(15, 32)
				FAXE Q 2 Offset(10, 54)
				FAXE Q 7 Offset(10, 150)
				FAXE L 1 Offset(-1, 60) A_ReFire
				FAXE L 1 Offset(0, 52)
				FAXE L 1 Offset(0, 44)
				FAXE M 1 Offset(0, 36)
				FAXE M 1
				Goto ReadyGlow
			AltFire:
				FAXE B 0 Offset(15, 32) A_JumpIfInventory("Mana1", 5, 1)
				Goto FireNoMana
				FAXE N 4 Offset(15, 32)
				FAXE O 3 Offset(15, 32)
				FAXE P 2 Offset(15, 32)
				FAXE P 0 Offset(15, 32) A_TakeInventory("Mana1", 5)
				FAXE P 0 Offset(-5, 70) A_FireCustomMissile("FWeapAxeMissile")
				FAXE P 1 Offset(-5, 70) A_FAxeAttack
				FAXE P 2 Offset(-25, 90)
				FAXE Q 1 Offset(15, 32)
				FAXE Q 2 Offset(10, 54)
				FAXE Q 7 Offset(10, 150)
				FAXE Q 0 Offset(10, 150) A_JumpIfInventory("Mana1", 5, 1)
				Goto AltNoMana
				FAXE L 1 Offset(-1, 60) A_ReFire
				FAXE L 1 Offset(0, 52)
				FAXE L 1 Offset(0, 44)
				FAXE M 1 Offset(0, 36)
				FAXE M 1
				Goto ReadyGlow
			FireNoMana:
				FAXE B 4 Offset(15, 32)
				Goto Fire+1
			AltNoMana:
				FAXE A 1 Offset(-1, 60) A_ReFire
				FAXE A 1 Offset(0, 52)
				FAXE A 1 Offset(0, 44)
				FAXE A 1 Offset(0, 36)
				FAXE A 1
				Goto Ready
	  }
}

Actor FWeapAxeMissile
{
	SeeSound "CentaurLeaderAttack"
	DeathSound "CentaurMissileExplode"
	Radius 8
	Height 16
	Projectile
	Damage 10
	Speed 35
	States
	{
		Spawn:
			CTFX A -1 Bright
				stop
		Death:
			CTFX BCDEF 3 Bright
			stop
	}
}

Actor FWeapHammer2 : FWeapHammer replaces FWeapHammer
{
	Inventory.RestrictedTo "FighterClass"
	States
	{
		Spawn:
			WFHM A -1
			Stop
		Select:
			FHMR A 1 A_Raise
			Loop
		Deselect:
			FHMR A 1 A_Lower
			Loop
		Ready:
			FHMR A 1 A_WeaponReady
			Loop
		Fire:
			FHMR B 6 Offset(5, 0)
			FHMR C 3 Offset(5, 0) A_FHammerAttack
			FHMR D 3 Offset(5, 0)
			FHMR E 2 Offset(5, 0)
			FHMR E 10 Offset(5, 150) A_FHammerThrow
			FHMR A 1 Offset(0, 60)
			FHMR A 1 Offset(0, 55)
			FHMR A 1 Offset(0, 50)
			FHMR A 1 Offset(0, 45)
			FHMR A 1 Offset(0, 40)
			FHMR A 1 Offset(0, 35)
			FHMR A 1
			Goto Ready
		AltFire:
			FHMR B 0 A_JumpIfInventory("Mana2", 10,3)
			FHMR B 0 A_JumpIfInventory("Mana2", 3,1)
			Goto Fire2
			FHMR B 0 A_TakeInventory("Mana2", 3)
			Goto Fire
			FHMR B 6 Offset(5, 0)
			FHMR C 3 Offset(5, 0) A_FHammerAttack
			FHMR D 3 Offset(5, 0)
			FHMR E 2 Offset(5, 0)
			FHMR E 0 Offset(5, 150) A_TakeInventory("Mana2", 10)
			FHMR E 10 Offset(5, 150) A_FireCustomMissile("MinotaurFX2_2")
			FHMR A 1 Offset(0, 60)
			FHMR A 1 Offset(0, 55)
			FHMR A 1 Offset(0, 50)
			FHMR A 1 Offset(0, 45)
			FHMR A 1 Offset(0, 40)
			FHMR A 1 Offset(0, 35)
			FHMR A 1
			Goto Ready
		Fire2:
			FHMR B 6 Offset(5, 0)
			FHMR C 3 Offset(5, 0) A_FHammerAttack
			FHMR D 3 Offset(5, 0)
			FHMR E 2 Offset(5, 0)
			FHMR E 10 Offset(5, 150)
			FHMR A 1 Offset(0, 60)
			FHMR A 1 Offset(0, 55)
			FHMR A 1 Offset(0, 50)
			FHMR A 1 Offset(0, 45)
			FHMR A 1 Offset(0, 40)
			FHMR A 1 Offset(0, 35)
			FHMR A 1
			Goto Ready
	}
}

Actor FWeaponPiece1_2 : FWeaponPiece1 replaces FWeaponPiece1
{
	Inventory.RestrictedTo "FighterClass"
	WeaponPiece.Weapon FWeapQuietus2
}

Actor FWeaponPiece2_2 : FWeaponPiece2 replaces FWeaponPiece2
{
	Inventory.RestrictedTo "FighterClass"
	WeaponPiece.Weapon FWeapQuietus2
}

Actor FWeaponPiece3_2 : FWeaponPiece3 replaces FWeaponPiece3
{
	Inventory.RestrictedTo "FighterClass"
	WeaponPiece.Weapon FWeapQuietus2
}

Actor FWeapQuietus2 : FWeapQuietus replaces FWeapQuietus
{
	Inventory.RestrictedTo "FighterClass"
	-WEAPON.PRIMARY_USES_BOTH
	+WEAPON.AMMO_OPTIONAL
	Weapon.AmmoUse1 0
	Weapon.AmmoUse2 0
	States
	{
		Spawn:
			TNT1 A -1
			Stop
		Select:
			FSRD A 0 A_JumpIfInventory("Mana1", 14, "CheckSelect1")
			FSRD J 1 A_Raise
			Loop
		CheckSelect1:
			FSRD A 0 A_JumpIfInventory("Mana2", 14, "CheckSelect2")
			FSRD J 1 A_Raise
			Goto Select
		CheckSelect2:
			FSRD A 1 Bright A_Raise
			Goto Select
		Deselect:
			FSRD A 0 A_JumpIfInventory("Mana1", 14, "CheckDeselect1")
			FSRD J 1 A_Lower
			Loop
		CheckDeselect1:
			FSRD A 0 A_JumpIfInventory("Mana2", 14, "CheckDeselect2")
			FSRD J 1 A_Lower
			Goto Deselect
		CheckDeselect2:
			FSRD J 1 A_Lower
			Goto Deselect
		Ready:
			FSRD A 0 A_JumpIfInventory("Mana1", 14, 2)
			FSRD J 1 A_WeaponReady
			Loop
			FSRD A 0 A_JumpIfInventory("Mana2", 14, "ReadyMana")
			FSRD J 1 A_WeaponReady
			Loop
		ReadyMana:
			FSRD A 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD A 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD A 1 Bright A_WeaponReady
			FSRD A 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD A 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD A 1 Bright A_WeaponReady
			FSRD A 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD A 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD A 1 Bright A_WeaponReady
			FSRD A 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD A 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD A 1 Bright A_WeaponReady
			FSRD B 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD B 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD B 1 Bright A_WeaponReady
			FSRD B 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD B 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD B 1 Bright A_WeaponReady
			FSRD B 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD B 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD B 1 Bright A_WeaponReady
			FSRD B 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD B 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD B 1 Bright A_WeaponReady
			FSRD C 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD C 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD C 1 Bright A_WeaponReady
			FSRD C 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD C 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD C 1 Bright A_WeaponReady
			FSRD C 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD C 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD C 1 Bright A_WeaponReady
			FSRD C 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD C 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto Ready
			FSRD C 1 Bright A_WeaponReady			
			Goto Ready
		Fire:
			FSRD F 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto AltFire
			FSRD F 0 A_JumpIfInventory("Mana2", 14, 1)
			Goto AltFire
			FSRD D 3 Bright Offset(5, 36)
			FSRD E 3 Bright Offset(5, 36)
			FSRD F 2 Bright Offset(5, 36)
			FSRD F 0 A_TakeInventory("Mana1", 14)
			FSRD F 0 A_TakeInventory("Mana2", 14)
			FSRD G 3 Bright Offset(5, 36) A_FSwordAttack
			FSRD H 2 Bright Offset(5, 36) 
			FSRD I 2 Bright Offset(5, 36)
			FSRD I 10 Bright Offset(5, 150)
			FSRD F 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto FinishNoMana
			FSRD F 0 A_JumpIfInventory("Mana2", 14, 1)
			Goto FinishNoMana
		FinishMana:
			FSRD A 1 Bright Offset(5, 60)
			FSRD B 1 Bright Offset(5, 55)
			FSRD C 1 Bright Offset(5, 50)
			FSRD A 1 Bright Offset(5, 45)
			FSRD B 1 Bright Offset(5, 40)
			Goto Ready		
		AltFire:
			FSRD DK 3 Offset(5, 36)
			FSRD L 2 Offset(5, 36)
			FSRD M 3 Offset(5, 36) A_CustomPunch(36, 0, 0, "AxePuff", 128)
			FSRD N 2 Offset(5, 36) 
			TNT1 A 2 Offset(5, 36)
			TNT1 A 10 Offset(5, 150)
			FSRD F 0 A_JumpIfInventory("Mana1", 14, 1)
			Goto FinishNoMana
			FSRD F 0 A_JumpIfInventory("Mana2", 14, "FinishMana")
			Goto FinishNoMana
		FinishNoMana:
			FSRD J 1 Offset(5, 60)
			FSRD J 1 Offset(5, 55)
			FSRD J 1 Offset(5, 50)
			FSRD J 1 Offset(5, 45)
			FSRD J 1 Offset(5, 40)
			Goto Ready		
	}
}